<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>django on anthony lukach</title><link>https://alukach.com/tags/django/</link><description>Recent content in django on anthony lukach</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 15 Dec 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://alukach.com/tags/django/index.xml" rel="self" type="application/rss+xml"/><item><title>Django Admin Fu, part 2</title><link>https://alukach.com/posts/django-admin-pt-2/</link><pubDate>Mon, 15 Dec 2014 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/django-admin-pt-2/</guid><description>Continuing with the Django Admin Fu post part 1.
Action with Intermediate Page Sometimes you may need an admin action that, when submitted, takes the user to a form where they provides some additional detail. The docs mention a bit about providing intermediate pages, but not a lot. It states:
Generally, something like [writing a intermediate page through the admin] isn’t considered a great idea. Most of the time, the best practice will be to return an HttpResponseRedirect and redirect the user to a view you’ve written, passing the list of selected objects in the GET query string.</description></item><item><title>Django Admin Fu, part 1</title><link>https://alukach.com/posts/django-admin-pt-1/</link><pubDate>Tue, 04 Nov 2014 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/django-admin-pt-1/</guid><description>I&amp;rsquo;ve been putting some time into building out the Django Admin site for one of my company&amp;rsquo;s projects. Here are some notes I&amp;rsquo;ve taken about straying away from the beaten path. I find surprisingly little information about how to do these things on StackOverflow or elsewhere. These were put used when working with Django 1.6.7.
Fake The Model, Make The View You may want a form on the Django Admin that exists along side the model views but doesn&amp;rsquo;t actually represent a model.</description></item></channel></rss>