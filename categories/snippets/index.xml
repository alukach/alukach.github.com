<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Snippets on anthony lukach</title><link>https://alukach.com/categories/snippets/</link><description>Recent content in Snippets on anthony lukach</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Anthony Lukach</copyright><lastBuildDate>Fri, 17 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://alukach.com/categories/snippets/index.xml" rel="self" type="application/rss+xml"/><item><title>SSH tunnels in Python</title><link>https://alukach.com/posts/ssh-tunnels-in-python/</link><pubDate>Fri, 17 Sep 2021 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/ssh-tunnels-in-python/</guid><description>At times, a developer may need to access infrastructure not available on the public internet. A common example of this is accessing a database located in a private subnet, as described in the VPC Scenario docs:
Instances in the private subnet are back-end servers that don&amp;rsquo;t need to accept incoming traffic from the internet and therefore do not have public IP addresses; however, they can send requests to the internet using the NAT gateway.</description></item><item><title>Getting area of WGS-84 geometries in SqKm</title><link>https://alukach.com/posts/wgs-84-epsg-4326-geometry-area-in-sq-km/</link><pubDate>Sat, 17 Jul 2021 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/wgs-84-epsg-4326-geometry-area-in-sq-km/</guid><description>Getting area of geometries in WGS-84/EPSG:4326 in square kilometers:
1 2 3 4 SELECTST_Area(geometry,false)/10^6sq_kmFROMmy_table</description></item><item><title>Concurrent Python Example Script</title><link>https://alukach.com/posts/concurrent-python-example-script/</link><pubDate>Fri, 19 Feb 2021 13:42:21 -0700</pubDate><guid>https://alukach.com/posts/concurrent-python-example-script/</guid><description>Below is a very simple example of a script that I write and re-write more often than I would like to admit. It reads input data from a CSV and processes each row concurrently. A progress bar provides updates. Honestly, it&amp;rsquo;s pretty much just the concurrent.futures ThreadPoolExecutor example plus a progress bar.</description></item><item><title>An ECR Deployment Script</title><link>https://alukach.com/posts/ecr-deployment-script/</link><pubDate>Mon, 09 Nov 2020 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/ecr-deployment-script/</guid><description>Below is a simple script to deploy a Docker image to ECR&amp;hellip;
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 set -e log () { local bold=$(tput bold) local normal=$(tput sgr0) echo &amp;#34;${bold}${1}${normal}&amp;#34; 1&amp;gt;&amp;amp;2; } if [ -z &amp;#34;${AWS_ACCOUNT}&amp;#34; ]; then log &amp;#34;Missing a valid AWS_ACCOUNT env variable&amp;#34;; exit 1; else log &amp;#34;Using AWS_ACCOUNT &amp;#39;${AWS_ACCOUNT}&amp;#39;&amp;#34;; fi AWS_REGION=${AWS_REGION:-us-east-1} REPO_NAME=${REPO_NAME:-my/repo} log &amp;#34;ðŸ”‘ Authenticating.</description></item><item><title>How to generate a database URI from an AWS Secret</title><link>https://alukach.com/posts/database-uri-from-secret/</link><pubDate>Mon, 15 Jun 2020 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/database-uri-from-secret/</guid><description>A quick note about how to generate a database URI (or any other derived string) from an AWS SecretsManager SecretTargetAttachment (such as what&amp;rsquo;s provided via a RDS DatabaseInstance&amp;rsquo;s secret property).
1 2 3 4 5 6 7 8 9 10 11 db = rds.DatabaseInstance( # ... ) db_val = lambda field: db.secret.secret_value_from_json(field).to_string() task_definition.add_container( environment=dict( # ... PGRST_DB_URI=f&amp;#34;postgres://{db_val(&amp;#39;username&amp;#39;)}:{db_val(&amp;#39;password&amp;#39;)}@{db_val(&amp;#39;host&amp;#39;)}:{db_val(&amp;#39;port&amp;#39;)}/&amp;#34;, ), # ... )</description></item><item><title>Boilerplate for S3 Batch Operation Lambda</title><link>https://alukach.com/posts/aws-s3-batch-operation-lambda-boilerplate/</link><pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/aws-s3-batch-operation-lambda-boilerplate/</guid><description>S3 Batch Operation provide a simple way to process a number of files stored in an S3 bucket with a Lambda function. However, the Lambda function must return particular Response Codes. Below is an example of a Lambda function written in Python that works with AWS S3 Batch Operations.</description></item><item><title>Parsing S3 Inventory CSV output in Python</title><link>https://alukach.com/posts/parsing-s3-inventory-output/</link><pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/parsing-s3-inventory-output/</guid><description>S3 Inventory is a great way to access a large number of keys in an S3 Bucket. Its output is easily parsed by AWS Athena, enabling queries across the key names (e.g. find all keys ending with .png)
However, sometimes you just need to list all of the keys mentioned in the S3 Inventory output (e.g. populating an SQS queue with every keyname mentioned in an inventory output). The following code is an example of doing such task in Python:</description></item><item><title>A PIL-friendly class for S3 objects</title><link>https://alukach.com/posts/pil-friendly-s3-file/</link><pubDate>Wed, 11 Dec 2019 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/pil-friendly-s3-file/</guid><description>Here&amp;rsquo;s a quick example of creating an file-like object in Python that represents an object on S3 and plays nicely with PIL. This ended up being overkill for my needs but I figured somebody might get some use out of it.</description></item><item><title>Serve an Esri Web AppBuilder web app from HTTP</title><link>https://alukach.com/posts/serve-esri-webapp-http/</link><pubDate>Wed, 28 Mar 2018 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/serve-esri-webapp-http/</guid><description>When an Esri Web AppBuilder web app is configured with a portalUrl value served from HTTPS, the web app automatically redirects users to HTTPS when visited via HTTP. While this is best-practice in production, it can be a burden in development when you want to quickly run a local version of the web app. Below is a quick script written with Python standard libraries to serve a web app over HTTP.</description></item><item><title>Learning AngularJS</title><link>https://alukach.com/posts/notes-on-learning-angularjs/</link><pubDate>Sat, 22 Mar 2014 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/notes-on-learning-angularjs/</guid><description>Here is a quick dump of some of the better resources that I came across while learning AngularJS.
StackOverflow: How to &amp;lsquo;think in AngularJS&amp;rsquo; - Great for getting the appropriate mindset.
egghead.io&amp;rsquo;s AngularJS series by John Lindquist - Excellently cut up into discrete segments to cover fundamentals.
Introduction to AngularJS - First in a series of developing an Angular app. Then watch [End to End](End to End with Angular JS), Security, Frontend Workflows, Testing</description></item><item><title>SublimeText3 Setup</title><link>https://alukach.com/posts/sublimetext3-setup/</link><pubDate>Mon, 03 Feb 2014 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/sublimetext3-setup/</guid><description>As I was transitioning from SublimeText2 to SublimeText3, it became apparent that I should keep a copy of my favorite text editor&amp;rsquo;s plugins and settings.</description></item><item><title>Natural Language Toolkit Notes</title><link>https://alukach.com/posts/nltk-notes/</link><pubDate>Sun, 25 Aug 2013 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/nltk-notes/</guid><description>I&amp;rsquo;ve been experimenting with Python&amp;rsquo;s Natural Language Toolkit, following along with Steven Bird, Ewan Klein, and Edward Loper&amp;rsquo;s book &amp;ldquo;Natural Language Processing with Python &amp;mdash; Analyzing Text with the Natural Language Toolkit&amp;rdquo; (pdf version).
So far, the book&amp;rsquo;s been great. As I&amp;rsquo;m going through the book, I&amp;rsquo;ve been writing down notes relating to the book&amp;rsquo;s examples. I&amp;rsquo;ve made a Github repo to store these notes and experiments that I may be doing using the NLTK here.</description></item><item><title>pushd and popd forever</title><link>https://alukach.com/posts/pushd-all-day-long/</link><pubDate>Sat, 02 Mar 2013 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/pushd-all-day-long/</guid><description>Becoming tired of typing paths repeatedly in the terminal, I realized that I should be using pushd and popd to be navigating directory structures. For those uninitiated, pushd changes your current directory in a similar fashion to cd but additionally adds the former directory to a stack. You can later return to the former directory by executing popd, popping it from the directory history. Unfortunately, the commands pushd and popd both require at least twice as many characters to type as cd and additionally come with the overhead of having to learnt o use a new command instead of something that is nearly instinctual.</description></item><item><title>SSH Port Forwarding</title><link>https://alukach.com/posts/ssh-port-forwarding/</link><pubDate>Mon, 25 Feb 2013 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/ssh-port-forwarding/</guid><description>The other week I found myself up at 2am in Canada setting up a VPN between my home computer (running Ubuntu) in Seattle and my laptop &amp;lt;partyhard.jpg&amp;gt;. I had enabled SSH access on my home computer and had set up port forwarding on my router to allow for access from the outside world ahead of time, but had forgotten that I would need to have a port forwarded for the VPN server as well.</description></item></channel></rss>