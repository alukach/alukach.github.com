<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>anthony lukach</title><link>https://alukach.com/</link><description>Recent content on anthony lukach</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 21 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://alukach.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Normalizing heterogeneous decimal Ion data in Athena</title><link>https://alukach.com/posts/heterogeneous-ion-decimal-data/</link><pubDate>Mon, 21 Aug 2023 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/heterogeneous-ion-decimal-data/</guid><description>Recently, we exported data from a DynamoDB table to S3 in AWS Ion format. However, due to the fact that the DynamoDB table had varied formats for some numeric properties, the export serialized these numeric data columns in a few different formats: as a decimal (1234.), as an Ion decimal type (123d1), and as a string (&amp;quot;1234&amp;quot;).
When querying this data in Athena, the following SQL did the trick to convert any of those formats into a bigint:</description></item><item><title>Everything that I know about Cookies üç™</title><link>https://alukach.com/posts/notes-on-cookies/</link><pubDate>Sat, 01 Apr 2023 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/notes-on-cookies/</guid><description>This is everything that I know about using cookies in web applications. Admittedly, I don&amp;rsquo;t know a lot about cookies and should probably not be considered a source of authority on this topic. These are just notes I write while trying to learn about the subject.
Why cookies? Making authenticated anchor tags Can&amp;rsquo;t specify headers with &amp;lt;a&amp;gt; tags.
Could supply token as query parameter, but that&amp;rsquo;s a security concern due to potential of token being cached with URL.</description></item><item><title>Auto-assume an IAM role before running a command</title><link>https://alukach.com/posts/with-role-command/</link><pubDate>Thu, 08 Sep 2022 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/with-role-command/</guid><description>A convenience function to assume a IAM Role via STS before running a command.
Add the following to your ~/.zshrc (or equivalent) file:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 function with-role { readonly role_arn=${1:?&amp;#34;The role_arn must be specified.&amp;#34;} env -S $( aws sts assume-role \ --role-arn ${role_arn} \ --role-session-name ${USER} \ | \ jq -r &amp;#39;.Credentials | &amp;#34; AWS_ACCESS_KEY_ID=\(.AccessKeyId) AWS_SECRET_ACCESS_KEY=\(.SecretAccessKey) AWS_SESSION_TOKEN=\(.SessionToken) &amp;#34;&amp;#39; ) ${@:2} } This assumes that you have both the AWS CLI and jq installed.</description></item><item><title>Type-based message processing with Pydantic</title><link>https://alukach.com/posts/message-processing-with-pydantic/</link><pubDate>Fri, 05 Aug 2022 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/message-processing-with-pydantic/</guid><description>When building systems to process messages, it&amp;rsquo;s not unlikely to find yourself in a situation where you need to process a number of inputted heterogeneous messages (i.e. messages of varying shapes/types). For example, consider a situation where you are processing messages from an SQS queue via a Lambda function. This post attempts to highlight how this can be achieved in a clean and elegant manner by utilizing Pydantic, Python&amp;rsquo;s typing system, and some helpers from the Python standard library.</description></item><item><title>Securing FastAPI with JWKS (AWS Cognito, Auth0)</title><link>https://alukach.com/posts/fastapi-rs256-jwt/</link><pubDate>Fri, 27 May 2022 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/fastapi-rs256-jwt/</guid><description>This post is a quick capture of how to easily secure your FastAPI with any auth provider that provides JWKS.
Background: RS256 RS256 is a signing algorithm used to generate and validate JSON Web Tokens (JWTs). Unlike the common HS256 algorithm that uses the same secret string to both generate and validate JWTs, RS256 uses a private key to generate JWTs and a separate public key for validating JWTs:
RS256 generates an asymmetric signature, which means a private key must be used to sign the JWT and a different public key must be used to verify the signature.</description></item><item><title>Security-conscious cloud deployments from Github Actions via OpenID Connect</title><link>https://alukach.com/posts/oidc-github-actions/</link><pubDate>Mon, 20 Dec 2021 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/oidc-github-actions/</guid><description>Goals This ticket is focused on how we can securely deploy to a major cloud provider environment (e.g. AWS, Azure, GCP) from within our Github Actions workflows.
Why is this challenging? A naive solution to this problem is to generate some cloud provider credentials (e.g. AWS Access Keys) and to store them as a Github Secret. Our Github Actions can then utilize these credentials in its workflows. However, this technique contains a number of concerns:</description></item><item><title>Roll your own PR preview CI pipeline</title><link>https://alukach.com/posts/diy-pr-previews/</link><pubDate>Sun, 21 Nov 2021 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/diy-pr-previews/</guid><description>Goal We want a CI pipeline that will build and deploy an instance of our frontend application for every PR created in our frontend repo. Additionally, we want to be able to easily spin up applications with overridden configuration to allow developers to test the frontend against experimental backends. Finally, we want a reporting mechanism to inform developers when and where these deployed environments are available.
Other Options Before you jump into this, consider that there are out-of-the-box solutions to solve this problem mentioned in the followup at the bottom of this page.</description></item><item><title>Putting animated SVGs of Terminal Output into Github READMEs</title><link>https://alukach.com/posts/animated-terminal-output/</link><pubDate>Fri, 24 Sep 2021 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/animated-terminal-output/</guid><description>Have you just written a new ‚ú®fancy CLI‚ú® and want to demo it in your Github Readme? Recording your terminal output is a nice way to demonstrate the experience.
Here&amp;rsquo;s an example of what we&amp;rsquo;re going to make:
Steps Install Dependencies asciinema: brew install asciinema svg-term-cli: npm install -g svg-term-cli Setup your terminal Some tips:
Font/screen size matters. The asciinema output will look just as it does in your terminal. You&amp;rsquo;ll probably want to bump up the font-size and shrink down the terminal so that the text is legible in your README.</description></item><item><title>SSH tunnels in Python</title><link>https://alukach.com/posts/ssh-tunnels-in-python/</link><pubDate>Fri, 17 Sep 2021 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/ssh-tunnels-in-python/</guid><description>At times, a developer may need to access infrastructure not available on the public internet. A common example of this is accessing a database located in a private subnet, as described in the VPC Scenario docs:
Instances in the private subnet are back-end servers that don&amp;rsquo;t need to accept incoming traffic from the internet and therefore do not have public IP addresses; however, they can send requests to the internet using the NAT gateway.</description></item><item><title>Getting area of WGS-84 geometries in SqKm</title><link>https://alukach.com/posts/wgs-84-epsg-4326-geometry-area-in-sq-km/</link><pubDate>Sat, 17 Jul 2021 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/wgs-84-epsg-4326-geometry-area-in-sq-km/</guid><description>Getting area of geometries in WGS-84/EPSG:4326 in square kilometers:
1 2 3 4 SELECT ST_Area(geometry, false) / 10^6 sq_km FROM my_table</description></item><item><title>Concurrent Python Example Script</title><link>https://alukach.com/posts/concurrent-python-example-script/</link><pubDate>Fri, 19 Feb 2021 13:42:21 -0700</pubDate><guid>https://alukach.com/posts/concurrent-python-example-script/</guid><description>Below is a very simple example of a script that I write and re-write more often than I would like to admit. It reads input data from a CSV and processes each row concurrently. A progress bar provides updates. Honestly, it&amp;rsquo;s pretty much just the concurrent.futures ThreadPoolExecutor example plus a progress bar.</description></item><item><title>An ECR Deployment Script</title><link>https://alukach.com/posts/ecr-deployment-script/</link><pubDate>Mon, 09 Nov 2020 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/ecr-deployment-script/</guid><description>Below is a simple script to deploy a Docker image to ECR&amp;hellip;
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 set -e log () { local bold=$(tput bold) local normal=$(tput sgr0) echo &amp;#34;${bold}${1}${normal}&amp;#34; 1&amp;gt;&amp;amp;2; } if [ -z &amp;#34;${AWS_ACCOUNT}&amp;#34; ]; then log &amp;#34;Missing a valid AWS_ACCOUNT env variable&amp;#34;; exit 1; else log &amp;#34;Using AWS_ACCOUNT &amp;#39;${AWS_ACCOUNT}&amp;#39;&amp;#34;; fi AWS_REGION=${AWS_REGION:-us-east-1} REPO_NAME=${REPO_NAME:-my/repo} log &amp;#34;üîë Authenticating.</description></item><item><title>Using CloudFront as a Reverse Proxy</title><link>https://alukach.com/posts/using-cloudfont-as-a-reverse-proxy/</link><pubDate>Fri, 02 Oct 2020 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/using-cloudfont-as-a-reverse-proxy/</guid><description>Alternate title: How to be master of your domain.
The basic idea of this post is to demonstrate how CloudFront can be utilized as a serverless reverse-proxy, allowing you to host all of your application&amp;rsquo;s content and services from a single domain. This minimizes a project&amp;rsquo;s TLD footprint while providing project organization and performance along the way.
Why Within large organizations, bureaucracy can make it a challenge to obtain a subdomain for a project.</description></item><item><title>How to generate a database URI from an AWS Secret</title><link>https://alukach.com/posts/database-uri-from-secret/</link><pubDate>Mon, 15 Jun 2020 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/database-uri-from-secret/</guid><description>A quick note about how to generate a database URI (or any other derived string) from an AWS SecretsManager SecretTargetAttachment (such as what&amp;rsquo;s provided via a RDS DatabaseInstance&amp;rsquo;s secret property).
1 2 3 4 5 6 7 8 9 10 11 db = rds.DatabaseInstance( # ... ) db_val = lambda field: db.secret.secret_value_from_json(field).to_string() task_definition.add_container( environment=dict( # ... PGRST_DB_URI=f&amp;#34;postgres://{db_val(&amp;#39;username&amp;#39;)}:{db_val(&amp;#39;password&amp;#39;)}@{db_val(&amp;#39;host&amp;#39;)}:{db_val(&amp;#39;port&amp;#39;)}/&amp;#34;, ), # ... )</description></item><item><title>Tips for working with a large number of files in S3</title><link>https://alukach.com/posts/tips-for-working-with-a-large-number-of-files-in-s3/</link><pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/tips-for-working-with-a-large-number-of-files-in-s3/</guid><description>I would argue that S3 is basically AWS&amp;rsquo; best service. It&amp;rsquo;s super cheap, it&amp;rsquo;s basically infinitely scalable, and it never goes down (except for when it does). Part of its beauty is its simplicity. You give it a file and a key to identify that file, you can have faith that it will store it without issue. You give it a key, you can have faith that it will return the file represented by that key, assuming there is one.</description></item><item><title>Boilerplate for S3 Batch Operation Lambda</title><link>https://alukach.com/posts/aws-s3-batch-operation-lambda-boilerplate/</link><pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/aws-s3-batch-operation-lambda-boilerplate/</guid><description>S3 Batch Operation provide a simple way to process a number of files stored in an S3 bucket with a Lambda function. However, the Lambda function must return particular Response Codes. Below is an example of a Lambda function written in Python that works with AWS S3 Batch Operations.</description></item><item><title>Parsing S3 Inventory CSV output in Python</title><link>https://alukach.com/posts/parsing-s3-inventory-output/</link><pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/parsing-s3-inventory-output/</guid><description>S3 Inventory is a great way to access a large number of keys in an S3 Bucket. Its output is easily parsed by AWS Athena, enabling queries across the key names (e.g. find all keys ending with .png)
However, sometimes you just need to list all of the keys mentioned in the S3 Inventory output (e.g. populating an SQS queue with every keyname mentioned in an inventory output). The following code is an example of doing such task in Python:</description></item><item><title>A PIL-friendly class for S3 objects</title><link>https://alukach.com/posts/pil-friendly-s3-file/</link><pubDate>Wed, 11 Dec 2019 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/pil-friendly-s3-file/</guid><description>Here&amp;rsquo;s a quick example of creating an file-like object in Python that represents an object on S3 and plays nicely with PIL. This ended up being overkill for my needs but I figured somebody might get some use out of it.</description></item><item><title>Using CloudFormation's Fn::Sub with Bash parameter substitution</title><link>https://alukach.com/posts/cloudformation-sub-ref/</link><pubDate>Mon, 30 Apr 2018 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/cloudformation-sub-ref/</guid><description>Let&amp;rsquo;s say that you need to inject a large bash script into a CloudFormation AWS::EC2::Instance Resource&amp;rsquo;s UserData property. CloudFormation makes this easy with the Fn::Base64 intrinsic function:
1 2 3 4 5 6 7 8 9 10 11 12 AWSTemplateFormatVersion: &amp;#39;2010-09-09&amp;#39; Resources: VPNServerInstance: Type: AWS::EC2::Instance Properties: ImageId: ami-efd0428f InstanceType: m3.medium UserData: Fn::Base64: | #!/bin/sh echo &amp;#34;Hello world&amp;#34; In your bash script, you may even want to reference a parameter created elsewhere in the CloudFormation template.</description></item><item><title>Serve an Esri Web AppBuilder web app from HTTP</title><link>https://alukach.com/posts/serve-esri-webapp-http/</link><pubDate>Wed, 28 Mar 2018 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/serve-esri-webapp-http/</guid><description>When an Esri Web AppBuilder web app is configured with a portalUrl value served from HTTPS, the web app automatically redirects users to HTTPS when visited via HTTP. While this is best-practice in production, it can be a burden in development when you want to quickly run a local version of the web app. Below is a quick script written with Python standard libraries to serve a web app over HTTP.</description></item><item><title>Hosting Jupyter at a subdomain via Cloudflare</title><link>https://alukach.com/posts/serving-jupyter/</link><pubDate>Wed, 28 Dec 2016 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/serving-jupyter/</guid><description>Full Disclosure: I am NOT an expert at Jupyter or Anaconda (which I am using in this project), there may be some bad habits below&amp;hellip;
Below is a quick scratchpad of the steps I took to serve Jupyter from a subdomain. Jupyter is running behind NGINX on an OpenStack Ubuntu instance and the domain&amp;rsquo;s DNS is set up to use Cloudflare to provides convenient SSL support. I was suprised by the lack of documentation for this process, prompting me to document my steps taken here.</description></item><item><title>Django Admin Fu, part 2</title><link>https://alukach.com/posts/django-admin-pt-2/</link><pubDate>Mon, 15 Dec 2014 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/django-admin-pt-2/</guid><description>Continuing with the Django Admin Fu post part 1.
Action with Intermediate Page Sometimes you may need an admin action that, when submitted, takes the user to a form where they provides some additional detail. The docs mention a bit about providing intermediate pages, but not a lot. It states:
Generally, something like [writing a intermediate page through the admin] isn‚Äôt considered a great idea. Most of the time, the best practice will be to return an HttpResponseRedirect and redirect the user to a view you‚Äôve written, passing the list of selected objects in the GET query string.</description></item><item><title>Django Admin Fu, part 1</title><link>https://alukach.com/posts/django-admin-pt-1/</link><pubDate>Tue, 04 Nov 2014 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/django-admin-pt-1/</guid><description>I&amp;rsquo;ve been putting some time into building out the Django Admin site for one of my company&amp;rsquo;s projects. Here are some notes I&amp;rsquo;ve taken about straying away from the beaten path. I find surprisingly little information about how to do these things on StackOverflow or elsewhere. These were put used when working with Django 1.6.7.
Fake The Model, Make The View You may want a form on the Django Admin that exists along side the model views but doesn&amp;rsquo;t actually represent a model.</description></item><item><title>Learning AngularJS</title><link>https://alukach.com/posts/notes-on-learning-angularjs/</link><pubDate>Sat, 22 Mar 2014 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/notes-on-learning-angularjs/</guid><description>Here is a quick dump of some of the better resources that I came across while learning AngularJS.
StackOverflow: How to &amp;rsquo;think in AngularJS&amp;rsquo; - Great for getting the appropriate mindset.
egghead.io&amp;rsquo;s AngularJS series by John Lindquist - Excellently cut up into discrete segments to cover fundamentals.
Introduction to AngularJS - First in a series of developing an Angular app. Then watch [End to End](End to End with Angular JS), Security, Frontend Workflows, Testing</description></item><item><title>SublimeText3 Setup</title><link>https://alukach.com/posts/sublimetext3-setup/</link><pubDate>Mon, 03 Feb 2014 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/sublimetext3-setup/</guid><description>As I was transitioning from SublimeText2 to SublimeText3, it became apparent that I should keep a copy of my favorite text editor&amp;rsquo;s plugins and settings.</description></item><item><title>Natural Language Toolkit Notes</title><link>https://alukach.com/posts/nltk-notes/</link><pubDate>Sun, 25 Aug 2013 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/nltk-notes/</guid><description>I&amp;rsquo;ve been experimenting with Python&amp;rsquo;s Natural Language Toolkit, following along with Steven Bird, Ewan Klein, and Edward Loper&amp;rsquo;s book &amp;ldquo;Natural Language Processing with Python &amp;mdash; Analyzing Text with the Natural Language Toolkit&amp;rdquo; (pdf version).
So far, the book&amp;rsquo;s been great. As I&amp;rsquo;m going through the book, I&amp;rsquo;ve been writing down notes relating to the book&amp;rsquo;s examples. I&amp;rsquo;ve made a Github repo to store these notes and experiments that I may be doing using the NLTK here.</description></item><item><title>pushd and popd forever</title><link>https://alukach.com/posts/pushd-all-day-long/</link><pubDate>Sat, 02 Mar 2013 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/pushd-all-day-long/</guid><description>Becoming tired of typing paths repeatedly in the terminal, I realized that I should be using pushd and popd to be navigating directory structures. For those uninitiated, pushd changes your current directory in a similar fashion to cd but additionally adds the former directory to a stack. You can later return to the former directory by executing popd, popping it from the directory history. Unfortunately, the commands pushd and popd both require at least twice as many characters to type as cd and additionally come with the overhead of having to learnt o use a new command instead of something that is nearly instinctual.</description></item><item><title>SSH Port Forwarding</title><link>https://alukach.com/posts/ssh-port-forwarding/</link><pubDate>Mon, 25 Feb 2013 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/ssh-port-forwarding/</guid><description>The other week I found myself up at 2am in Canada setting up a VPN between my home computer (running Ubuntu) in Seattle and my laptop &amp;lt;partyhard.jpg&amp;gt;. I had enabled SSH access on my home computer and had set up port forwarding on my router to allow for access from the outside world ahead of time, but had forgotten that I would need to have a port forwarded for the VPN server as well.</description></item><item><title>Hello World</title><link>https://alukach.com/posts/hello-world/</link><pubDate>Wed, 20 Feb 2013 00:00:00 +0000</pubDate><guid>https://alukach.com/posts/hello-world/</guid><description>I&amp;rsquo;m just getting things set up with this new blog. I&amp;rsquo;ve been hearing about this movement towards static-generated blogs for a while now, ever since reading this article about the Obama Campaign&amp;rsquo;s fundraising platform. The idea of stepping away from databases and convulated CMS&amp;rsquo;s and PHP attracted me.
This site is built with Jekyll. After seeing how simple the template syntax was (based on LiquidMarkup, not unlike Django or Jinja2&amp;rsquo;s syntax), I was sold.</description></item><item><title>Hello recruiter!</title><link>https://alukach.com/hello-recruiter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alukach.com/hello-recruiter/</guid><description>Thanks for reaching out. You likely received a link to this page from me in response to a message you sent me via email or LinkedIn. Unfortunately, I am unable to schedule phone calls with every recruiter that contacts me. For this reason I have created this page that should help streamline our communication. It aims to answer common questions you may have and to outline criteria so that we can quickly identify if I am the right person for the role you&amp;rsquo;re looking to fill.</description></item><item><title>R√©sum√©</title><link>https://alukach.com/resume/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alukach.com/resume/</guid><description>Download as pdf, docx, rtf, odt, txt, html</description></item></channel></rss>